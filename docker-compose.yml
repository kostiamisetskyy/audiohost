services:
  postgres:
    restart: unless-stopped
    privileged: true
    env_file: .env
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    image: postgres:15-alpine
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  redis:
    restart: unless-stopped
    privileged: true
    env_file: .env
    image: redis:7-alpine
    volumes:
      - ./data/redis:/data

  celeryworker:
    restart: unless-stopped
    image: funkwhale/api:${FUNKWHALE_VERSION:-latest}
    privileged: true
    depends_on:
      - postgres
      - redis
    env_file: .env
    # Celery workers handle background tasks (such file imports or federation
    # messaging). The more processes a worker gets, the more tasks
    # can be processed in parallel. However, more processes also means
    # a bigger memory footprint.
    # By default, a worker will span a number of process equal to your number
    # of CPUs. You can adjust this, by explicitly setting the --concurrency
    # flag:
    #   celery -A funkwhale_api.taskapp worker -l INFO --concurrency=4
    command:
      - celery
      - --app=funkwhale_api.taskapp
      - worker
      - --loglevel=INFO
      - --concurrency=${CELERYD_CONCURRENCY-0}
    environment:
      - C_FORCE_ROOT=true
    volumes:
      - "music-dir:${MUSIC_DIRECTORY_PATH-/music}:rw"
      - "media-root:${MEDIA_ROOT}"

  celerybeat:
    restart: unless-stopped
    image: funkwhale/api:${FUNKWHALE_VERSION:-latest}
    privileged: true
    command:
      - celery
      - --app=funkwhale_api.taskapp
      - beat
      - --loglevel=INFO
    depends_on:
      - postgres
      - redis
    env_file: .env

  api:
    restart: unless-stopped
    image: funkwhale/api:${FUNKWHALE_VERSION:-latest}
    privileged: true
    depends_on:
      - postgres
      - redis
    env_file: .env
    volumes:
      - "music-dir:${MUSIC_DIRECTORY_PATH-/music}:rw"
      - "media-root:${MEDIA_ROOT}"
      - "static-root:${STATIC_ROOT}"

  front:
    restart: unless-stopped
    image: funkwhale/front:${FUNKWHALE_VERSION:-latest}
    privileged: true
    depends_on:
      - api
    env_file:
      - .env
    volumes:
      # Uncomment if you want to use your previous nginx config, please let us
      # know what special configuration you need, so we can support it with out
      # upstream nginx configuration!
      #- "./nginx/funkwhale.template:/etc/nginx/templates/default.conf.template:ro"
      #- "./nginx/funkwhale_proxy.conf:/etc/nginx/funkwhale_proxy.conf:ro"
      - "music-dir:${MUSIC_DIRECTORY_PATH-/music}:rw"
      - "media-root:${MEDIA_ROOT}:rw"
      - "static-root:/usr/share/nginx/html/staticfiles:rw"
    ports:
      # override those variables in your .env file if needed
      - "${FUNKWHALE_API_IP}:${FUNKWHALE_API_PORT}:80"
  typesense:
    restart: unless-stopped
    env_file:
      - .env
    image: typesense/typesense:0.24.0
    volumes:
      - ./typesense/data:/data
    command: --data-dir /data --enable-cors
    profiles:
      - typesense
volumes:
    music-dir:
    media-root:
    static-root:

